---
// src/pages/index.astro
import Layout from '../layouts/Layout.astro';

const projects = [
  {
    id: "drummer-posture",
    title: "Drummer Posture Monitoring",
    shortDescription: "Real-time posture monitoring for drummers",
    description: "A prototype application for real-time monitoring of posture while playing drums. Shows live feedback and helps drummers correct bad postural habits using advanced computer vision techniques.",
    image: "src/assets/drums.png",
    tags: ["React", "Python", "OpenPose", "Computer Vision"],
    technologies: ["React", "Python", "OpenPose", "MediaPipe", "TensorFlow"],
    challenges: ["Real-time processing", "Pose accuracy", "User feedback systems"],
    outcomes: ["90% accuracy in posture detection", "Real-time feedback system", "Improved drummer awareness"],
    githubUrl: "https://github.com/0r080r0/WebApp-DrummerPosture",
    demoUrl: "https://0r080r0.github.io/WebApp-DrummerPosture/",
    readTime: "GitHub & Live Demo"
  },
  {
    id: "music-therapy-ai",
    title: "Musician Health Survey",
    shortDescription: "Online survey assessing musiciansâ€™ mental and physical wellbeing",
    description: "Developed a structured, web-based questionnaire to assess musiciansâ€™ mental health, physical health, and overall wellbeing. Designed for use in longitudinal studies, the tool enables consistent self-report data collection to support health monitoring and analysis alongside physiological measures. Includes evidence-informed guidance tailored to each domain.",
    image: "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=600&h=400&fit=crop",
    tags: ["Musician Health", "Survey Design", "Questionnaire", "Longitudinal Studies"],
    technologies: ["R", "JavaScript", "HTML", "CSS"],
    challenges: ["Designing questions that balance clinical relevance with accessibility", "Creating tailored, evidence-based guidance without exceeding the scope of non-clinical tools", "Ensuring future compatibility with multimodal datasets"],
    outcomes: ["Built a flexible survey tool for structured assessment of musician health", "Enables longitudinal self-report data collection for research and health monitoring", "Supports integration of subjective health metrics into broader musician wellbeing analyses"],
    githubUrl: "#",
    readTime: "GitHub"
  },
  // ... (rest of your projects)
];

const researchExperiences = [
  {
    title: "Experimental Neuroscience",
    description: "Undergraduate research experience",
    icon: "ðŸ§ ",
    tasks: ["EEG data collection", "Behavioral experiment design", "Statistical analysis"],
    challenges: ["Signal noise reduction", "Participant recruitment", "Data preprocessing"],
    contributions: ["Improved experimental protocols", "Enhanced data quality", "Research methodology development"]
  },
  // ... (rest of your research experiences)
];

const theses = [
  {
    title: "BSc Thesis",
    year: "2021",
    type: "Bachelor in Psychology",
    topic: "Mental toughness and peak performance in competitive environments"
  },
  {
    title: "MSc Thesis", 
    year: "2024",
    type: "Master in Psychological Science",
    topic: "Music therapy effectiveness in Parkinson's disease rehabilitation: A systematic review and meta-analysis"
  }
];
---

<Layout title="Evangelia Karakoliou - PhD Portfolio">
  <main class="h-screen bg-black flex overflow-hidden relative">
    <!-- Background Layer -->
    <div class="absolute inset-0 bg-black"></div>

    <!-- Background Image Layer -->
    <div 
      class="absolute inset-0 bg-cover bg-center bg-no-repeat opacity-15" 
      style="background-image: url('/assets/Tatras.jpg'); z-index: 1;"
    ></div>

    <!-- Content Layer -->
    <div class="relative z-10 w-full flex">
      <!-- Left Sidebar -->
      <aside class="w-56 bg-black/80 backdrop-blur-sm border-r border-gray-700 p-4 flex flex-col overflow-y-auto">
        <nav class="space-y-4">
          <!-- Research Experience -->
          <div>
            <h3 class="text-xs font-semibold text-white mb-2 tracking-wide uppercase opacity-90">Research Experience</h3>
            <div class="space-y-1">
              {researchExperiences.map((area, index) => (
                <div class="research-area-item cursor-pointer" data-area-index={index} key={index}>
                  <div class="flex items-center space-x-2 p-1.5 rounded-lg hover:bg-white/10 transition-colors">
                    <span class="text-sm">{area.icon}</span>
                    <div class="flex-1">
                      <div class="flex items-center justify-between">
                        <div class="text-xs font-medium text-white">{area.title}</div>
                        <svg class="w-3 h-3 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                        </svg>
                      </div>
                      <div class="text-xs text-gray-300 opacity-70 leading-tight">{area.description}</div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Academic Work -->
          <div>
            <h3 class="text-xs font-semibold text-white mb-2 tracking-wide uppercase opacity-90">Academic Work</h3>
            <div class="space-y-1">
              {theses.map((thesis, index) => (
                <div class="thesis-item cursor-pointer" data-thesis-index={index} key={index}>
                  <div class="p-2 bg-white/10 rounded-lg hover:bg-white/20 transition-colors">
                    <div class="flex items-center justify-between">
                      <div class="text-xs font-medium text-white">{thesis.title}</div>
                      <svg class="w-3 h-3 text-gray-400 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    </div>
                    <div class="text-xs text-gray-400 mt-0.5 opacity-70">{thesis.year} â€¢ {thesis.type}</div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Quick Links -->
          <div>
            <h3 class="text-xs font-semibold text-white mb-2 tracking-wide uppercase opacity-90">Quick Links</h3>
            <div class="space-y-1">
              <a href="/cv.pdf" class="block text-xs text-gray-300 hover:text-white transition-colors opacity-80 hover:opacity-100">
                ðŸ“„ Download CV
              </a>
              <a href="#publications" class="block text-xs text-gray-300 hover:text-white transition-colors opacity-80 hover:opacity-100">
                ðŸ“š Publications
              </a>
              <a href="#contact" class="block text-xs text-gray-300 hover:text-white transition-colors opacity-80 hover:opacity-100">
                ðŸ“§ Contact
              </a>
            </div>
          </div>
        </nav>
      </aside>

      <!-- Main Content -->
      <div class="flex-1 flex flex-col">
        <!-- Header -->
        <header class="px-6 py-4 bg-black/50 backdrop-blur-sm border-b border-gray-700">
          <div class="max-w-6xl mx-auto text-center">
            <h1 class="text-3xl font-light text-white mb-2">Evangelia Karakoliou</h1>
            <div class="intro-text opacity-0 space-y-1 text-gray-300">
              <p class="text-base opacity-90">PhD Candidate in Musician Health</p>
              <p class="text-sm opacity-80">Bridging the gap between research, technology and human performance</p>
              <p class="text-xs italic opacity-70">Dedicated to preventing injuries and optimising music practice through evidence-based interventions</p>
            </div>
          </div>
        </header>

        <!-- Projects Grid -->
        <div class="flex-1 px-6 py-4">
          <div class="max-w-6xl mx-auto h-full">
            <div class="grid grid-cols-3 gap-4 h-full">
              {projects.map((project) => (
                <div 
                  class="project-card group relative bg-black/60 backdrop-blur-sm rounded-xl overflow-hidden hover:shadow-xl transition-all duration-300 cursor-pointer border border-gray-700 hover:border-gray-500 flex flex-col"
                  data-project-id={project.id}
                  key={project.id}
                >
                  <div class="h-24 relative overflow-hidden flex-shrink-0">
                    <img 
                      src={project.image} 
                      alt={project.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                    />
                    <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent"></div>
                    <div class="absolute bottom-2 left-2 text-white">
                      <h3 class="font-medium text-xs mb-0.5">{project.title}</h3>
                      <p class="text-xs text-white/80 leading-tight">{project.shortDescription}</p>
                    </div>
                  </div>
                  
                  <div class="p-3 flex-1 flex flex-col">
                    <div class="flex flex-wrap gap-1 mb-2">
                      {project.tags.slice(0, 2).map((tag, i) => (
                        <span key={i} class="px-2 py-0.5 bg-slate-800 text-teal-300 rounded-full text-xs font-medium">
                          {tag}
                        </span>
                      ))}
                      {project.tags.length > 2 && (
                        <span class="px-2 py-0.5 bg-slate-800 text-teal-300 rounded-full text-xs font-medium">
                          +{project.tags.length - 2}
                        </span>
                      )}
                    </div>
                    
                    <div class="flex items-center justify-between text-xs text-gray-400 mt-auto">
                      <span>{project.readTime}</span>
                      <svg class="w-3 h-3 opacity-0 group-hover:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                      </svg>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Project Modal -->
    <div id="project-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm hidden items-center justify-center z-50 p-4">
      <div class="bg-black/90 border border-gray-700 rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
        <div class="sticky top-0 bg-black/90 border-b border-gray-700 p-6 flex items-center justify-between">
          <h2 id="modal-title" class="text-2xl font-semibold text-white"></h2>
          <button id="close-modal" class="text-gray-400 hover:text-white transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div class="p-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
              <img id="modal-image" class="w-full h-64 object-cover rounded-lg mb-4" />
              <p id="modal-description" class="text-gray-300 leading-relaxed"></p>
            </div>
            <div class="space-y-6">
              <div>
                <h3 class="text-lg font-semibold text-white mb-3">Technologies Used</h3>
                <div id="modal-technologies" class="flex flex-wrap gap-2"></div>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white mb-3">Key Challenges</h3>
                <ul id="modal-challenges" class="space-y-2 text-gray-300"></ul>
              </div>
              <div>
                <h3 class="text-lg font-semibold text-white mb-3">Outcomes & Impact</h3>
                <ul id="modal-outcomes" class="space-y-2 text-gray-300"></ul>
              </div>
              <div id="modal-links" class="flex gap-3 pt-4 border-t border-gray-700"></div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Research Experience Modal -->
    <div id="research-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm hidden items-center justify-center z-50 p-4">
      <div class="bg-black/90 border border-gray-700 rounded-2xl max-w-3xl w-full max-h-[90vh] overflow-y-auto">
        <div class="sticky top-0 bg-black/90 border-b border-gray-700 p-6 flex items-center justify-between">
          <h2 id="research-modal-title" class="text-2xl font-semibold text-white"></h2>
          <button id="close-research-modal" class="text-gray-400 hover:text-white transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div class="p-6">
          <div class="space-y-6">
            <p id="research-modal-description" class="text-gray-300 leading-relaxed text-lg"></p>
            <div>
              <h3 class="text-lg font-semibold text-white mb-3">Key Tasks</h3>
              <ul id="research-modal-tasks" class="space-y-2 text-gray-300"></ul>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-white mb-3">Challenges</h3>
              <ul id="research-modal-challenges" class="space-y-2 text-gray-300"></ul>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-white mb-3">Contributions</h3>
              <ul id="research-modal-contributions" class="space-y-2 text-gray-300"></ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Thesis Modal -->
    <div id="thesis-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm hidden items-center justify-center z-50 p-4">
      <div class="bg-black/90 border border-gray-700 rounded-2xl max-w-3xl w-full max-h-[90vh] overflow-y-auto">
        <div class="sticky top-0 bg-black/90 border-b border-gray-700 p-6 flex items-center justify-between">
          <h2 id="thesis-modal-title" class="text-2xl font-semibold text-white"></h2>
          <button id="close-thesis-modal" class="text-gray-400 hover:text-white transition-colors">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
        </div>
        <div class="p-6">
          <div class="space-y-6">
            <h3 class="text-lg font-semibold text-white mb-3">Type</h3>
            <p id="thesis-modal-type" class="text-gray-300 text-lg"></p>
            <h3 class="text-lg font-semibold text-white mb-3">Year</h3>
            <p id="thesis-modal-year" class="text-gray-300 text-lg"></p>
            <h3 class="text-lg font-semibold text-white mb-3">Topic</h3>
            <p id="thesis-modal-topic" class="text-gray-300 leading-relaxed"></p>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  /* Your styles here, no changes needed unless specific */
  .project-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  .project-card:hover {
    transform: translateY(-2px);
  }
  #project-modal {
    display: none;
  }
  #project-modal.active {
    display: flex;
  }
  .intro-text {
    animation: fadeIn 2s ease-in-out 0.5s forwards;
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script type="module">
  // Your scripts

  // Data (already imported as variables)
  // No need to redeclare; use the variables directly

  document.addEventListener('DOMContentLoaded', () => {
    // -- Modal Elements
    const modal = document.getElementById('project-modal');
    const modalTitle = document.getElementById('modal-title');
    const modalImage = document.getElementById('modal-image');
    const modalDescription = document.getElementById('modal-description');
    const modalTechnologies = document.getElementById('modal-technologies');
    const modalChallenges = document.getElementById('modal-challenges');
    const modalOutcomes = document.getElementById('modal-outcomes');
    const modalLinks = document.getElementById('modal-links');
    const closeModal = document.getElementById('close-modal');

    const researchModal = document.getElementById('research-modal');
    const researchModalTitle = document.getElementById('research-modal-title');
    const researchModalDescription = document.getElementById('research-modal-description');
    const researchModalTasks = document.getElementById('research-modal-tasks');
    const researchModalChallenges = document.getElementById('research-modal-challenges');
    const researchModalContributions = document.getElementById('research-modal-contributions');
    const closeResearchModalBtn = document.getElementById('close-research-modal');

    const thesisModal = document.getElementById('thesis-modal');
    const thesisModalTitle = document.getElementById('thesis-modal-title');
    const thesisModalType = document.getElementById('thesis-modal-type');
    const thesisModalYear = document.getElementById('thesis-modal-year');
    const thesisModalTopic = document.getElementById('thesis-modal-topic');
    const closeThesisModalBtn = document.getElementById('close-thesis-modal');

    // Helper functions to show/hide modals
    function showModal(project) {
      modalTitle.textContent = project.title;
      modalImage.src = project.image;
      modalDescription.textContent = project.description;

      // Technologies
      modalTechnologies.innerHTML = '';
      project.technologies.forEach((tech) => {
        const span = document.createElement('span');
        span.className =
          'px-3 py-1 bg-blue-900/50 text-blue-300 rounded-full text-sm font-medium border border-blue-700';
        span.textContent = tech;
        modalTechnologies.appendChild(span);
      });
      // Challenges
      modalChallenges.innerHTML = '';
      project.challenges.forEach((challenge) => {
        const li = document.createElement('li');
        li.className = 'flex items-start space-x-2';
        li.innerHTML = `<span class="text-red-400 mt-1">â€¢</span><span>${challenge}</span>`;
        modalChallenges.appendChild(li);
      });
      // Outcomes
      modalOutcomes.innerHTML = '';
      project.outcomes.forEach((outcome) => {
        const li = document.createElement('li');
        li.className = 'flex items-start space-x-2';
        li.innerHTML = `<span class="text-green-400 mt-1">â€¢</span><span>${outcome}</span>`;
        modalOutcomes.appendChild(li);
      });
      // Links
      modalLinks.innerHTML = '';
      if (project.githubUrl && project.githubUrl !== '#') {
        const a = document.createElement('a');
        a.href = project.githubUrl;
        a.target = '_blank';
        a.className =
          'flex items-center gap-2 px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition-colors border border-gray-600';
        a.innerHTML = `
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
          </svg>
          GitHub
        `;
        modalLinks.appendChild(a);
      }
      if (project.demoUrl && project.demoUrl !== '#') {
        const a = document.createElement('a');
        a.href = project.demoUrl;
        a.target = '_blank';
        a.className =
          'flex items-center gap-2 px-4 py-2 bg-green-800 text-white rounded-lg hover:bg-green-700 transition-colors border border-green-600';
        a.innerHTML = `
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M8 5v14l11-7z"/>
          </svg>
          Live Demo
        `;
        modalLinks.appendChild(a);
      }
      if (project.paperUrl && project.paperUrl !== '#') {
        const a = document.createElement('a');
        a.href = project.paperUrl;
        a.target = '_blank';
        a.className =
          'flex items-center gap-2 px-4 py-2 bg-blue-800 text-white rounded-lg hover:bg-blue-700 transition-colors border border-blue-600';
        a.innerHTML = `
          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6z"/>
            <path d="M14 2v6h6"/>
          </svg>
          Paper
        `;
        modalLinks.appendChild(a);
      }
      modal.classList.add('active');
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function hideModal() {
      modal.classList.remove('active');
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }

    // Attach event to close modal
    closeModal.addEventListener('click', hideModal);
    modal.addEventListener('click', (e) => {
      if (e.target === modal) hideModal();
    });
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') hideModal();
    });

    // -- Research Modal handlers
    function showResearchModal(area) {
      researchModalTitle.textContent = area.title;
      researchModalDescription.textContent = area.description;

      // Tasks
      researchModalTasks.innerHTML = '';
      area.tasks.forEach((task) => {
        const li = document.createElement('li');
        li.className = 'flex items-start space-x-2';
        li.innerHTML = `<span class="text-blue-400 mt-1">â€¢</span><span>${task}</span>`;
        researchModalTasks.appendChild(li);
      });
      // Challenges
      researchModalChallenges.innerHTML = '';
      area.challenges.forEach((challenge) => {
        const li = document.createElement('li');
        li.className = 'flex items-start space-x-2';
        li.innerHTML = `<span class="text-red-400 mt-1">â€¢</span><span>${challenge}</span>`;
        researchModalChallenges.appendChild(li);
      });
      // Contributions
      researchModalContributions.innerHTML = '';
      area.contributions.forEach((contribution) => {
        const li = document.createElement('li');
        li.className = 'flex items-start space-x-2';
        li.innerHTML = `<span class="text-green-400 mt-1">â€¢</span><span>${contribution}</span>`;
        researchModalContributions.appendChild(li);
      });
      researchModal.classList.add('active');
      researchModal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function hideResearchModal() {
      researchModal.classList.remove('active');
      researchModal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }

    // -- Thesis Modal handlers
    function showThesisModal(thesis) {
      thesisModalTitle.textContent = thesis.title;
      thesisModalType.textContent = thesis.type;
      thesisModalYear.textContent = thesis.year;
      thesisModalTopic.textContent = thesis.topic;

      thesisModal.classList.add('active');
      thesisModal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function hideThesisModal() {
      thesisModal.classList.remove('active');
      thesisModal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }

    // Attach event listeners for research items
    document.querySelectorAll('.research-area-item').forEach((item, index) => {
      item.addEventListener('click', () => {
        showResearchModal(researchExperiences[index]);
      });
    });
    // Attach event listeners for thesis items
    document.querySelectorAll('.thesis-item').forEach((item, index) => {
      item.addEventListener('click', () => {
        showThesisModal(theses[index]);
      });
    });

    // modal close buttons
    document.getElementById('close-research-modal').addEventListener('click', hideResearchModal);
    document.getElementById('close-thesis-modal').addEventListener('click', hideThesisModal);

    // modal background close
    researchModal.addEventListener('click', (e) => {
      if (e.target === researchModal) hideResearchModal();
    });
    thesisModal.addEventListener('click', (e) => {
      if (e.target === thesisModal) hideThesisModal();
    });

    // global escape handler
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        hideModal();
        hideResearchModal();
        hideThesisModal();
      }
    });

    // Utility to hide project modal if needed
    function hideModal() {
      modal.classList.remove('active');
      modal.style.display = 'none';
      document.body.style.overflow = 'auto';
    }

    // Attach event listeners for project cards
    document.querySelectorAll('.project-card').forEach((card) => {
      card.addEventListener('click', () => {
        const projectId = card.dataset.projectId;
        const project = projects.find(p => p.id === projectId);
        if (project) {
          showModal(project);
        }
      });
    });
  });
</script>